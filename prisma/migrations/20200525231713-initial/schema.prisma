generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model admin {
  created_at     DateTime @default(now())
  email          String   @unique
  id             Int      @default(autoincrement()) @id
  is_super_admin Boolean  @default(false)
  password       String
  updated_at     DateTime @default(now())
}

model class_session {
  course_id  Int
  created_at DateTime     @default(now())
  end_time   DateTime
  id         Int          @default(autoincrement()) @id
  start_time DateTime
  updated_at DateTime     @default(now())
  course     course       @relation(fields: [course_id], references: [id])
  class_user class_user[]
}

model class_user {
  class_id      Int
  created_at    DateTime      @default(now())
  id            Int           @default(autoincrement()) @id
  rating        Int
  updated_at    DateTime      @default(now())
  user_id       Int
  class_session class_session @relation(fields: [class_id], references: [id])
  user          user          @relation(fields: [user_id], references: [id])
}

model course {
  age_max       Int             @default(18)
  age_min       Int             @default(3)
  cover         String?
  created_at    DateTime        @default(now())
  duration      Int             @default(40)
  format        String
  id            Int             @default(autoincrement()) @id
  price         Int             @default(1)
  size_max      Int             @default(20)
  size_min      Int             @default(1)
  status        String          @default("unapproved")
  subject_id    Int
  summary       String
  teacher_id    Int
  title         String
  updated_at    DateTime        @default(now())
  subject       subject         @relation(fields: [subject_id], references: [id])
  teacher       teacher         @relation(fields: [teacher_id], references: [user_id])
  class_session class_session[]
  course_user   course_user[]
}

model course_user {
  course_id  Int
  id         Int     @default(autoincrement()) @id
  rating     Int
  student_id Int
  course     course  @relation(fields: [course_id], references: [id])
  student    student @relation(fields: [student_id], references: [user_id])
}

model message {
  body              String
  created_at        DateTime            @default(now())
  id                Int                 @default(autoincrement()) @id
  sender_id         Int
  subject           String
  updated_at        DateTime            @default(now())
  user              user                @relation(fields: [sender_id], references: [id])
  message_recipient message_recipient[]
}

model message_recipient {
  created_at DateTime @default(now())
  id         Int      @default(autoincrement()) @id
  message_id Int
  read       Boolean
  updated_at DateTime @default(now())
  user_id    Int
  message    message  @relation(fields: [message_id], references: [id])
  user       user     @relation(fields: [user_id], references: [id])
}

model student {
  created_at  DateTime      @default(now())
  id          Int           @default(autoincrement()) @id
  updated_at  DateTime      @default(now())
  user_id     Int           @unique
  user        user          @relation(fields: [user_id], references: [id])
  course_user course_user[]
}

model subject {
  created_at DateTime @default(now())
  id         Int      @default(autoincrement()) @id
  name       String   @unique
  updated_at DateTime @default(now())
  course     course[]
}

model teacher {
  created_at DateTime @default(now())
  id         Int      @default(autoincrement()) @id
  updated_at DateTime @default(now())
  user_id    Int      @unique
  user       user     @relation(fields: [user_id], references: [id])
  course     course[]
}

model user {
  avatar            String
  created_at        DateTime            @default(now())
  email             String              @unique
  first_name        String
  id                Int                 @default(autoincrement()) @id
  last_name         String
  phone             String              @unique
  updated_at        DateTime            @default(now())
  class_user        class_user[]
  message           message[]
  message_recipient message_recipient[]
  student           student?
  teacher           teacher?
}